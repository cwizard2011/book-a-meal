{"version":3,"sources":["../../server/controllers/OrderController.js"],"names":["OrderController","createOrder","req","res","checkBody","notEmpty","trim","requestErrors","validationErrors","status","json","errors","order","orderId","body","customerId","mealName","total","filterOrder","orders","filter","check","length","push","send","message","getOrder","editOrder","parseInt","params","existingOrder","edit","sendStatus"],"mappings":";;;;;;AACA;;;AAGA,MAAMA,eAAN,CAAsB;AACpB;;;;;;;;;AASA,SAAOC,WAAP,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3BD,QAAIE,SAAJ,CAAc,SAAd,EAAyB,sBAAzB,EAAiDC,QAAjD,GAA4DC,IAA5D;AACAJ,QAAIE,SAAJ,CAAc,YAAd,EAA4B,yBAA5B,EAAuDC,QAAvD,GAAkEC,IAAlE;AACAJ,QAAIE,SAAJ,CAAc,UAAd,EAA0B,0BAA1B,EAAsDC,QAAtD,GAAiEC,IAAjE;AACAJ,QAAIE,SAAJ,CAAc,OAAd,EAAuB,yBAAvB,EAAkDC,QAAlD,GAA6DC,IAA7D;;AAEA,UAAMC,gBAAgBL,IAAIM,gBAAJ,EAAtB;;AAEA,QAAID,aAAJ,EAAmB;AACjBJ,UAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,gBAAQJ;AADW,OAArB;AAGD,KAJD,MAIO;AACL,YAAMK,QAAQ;AACZC,iBAASX,IAAIY,IAAJ,CAASD,OADN;AAEZE,oBAAYb,IAAIY,IAAJ,CAASC,UAFT;AAGZC,kBAAUd,IAAIY,IAAJ,CAASE,QAHP;AAIZC,eAAOf,IAAIY,IAAJ,CAASG;AAJJ,OAAd;AAMA,YAAMC,cAAchB,IAAIiB,MAAJ,CAAWC,MAAX,CAAkBC,SACpCA,MAAMR,OAAN,KAAkBX,IAAIY,IAAJ,CAASD,OAA3B,IAAsCQ,MAAMN,UAAN,KAAqBb,IAAIY,IAAJ,CAASC,UADlD,CAApB;AAEA,UAAIG,YAAYI,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BpB,YAAIiB,MAAJ,CAAWI,IAAX,CAAgBX,KAAhB;AACAT,YAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,KAAF,EAArB;AACD,OAHD,MAGO;AACL,eAAOT,IAAIM,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB,EAAEC,SAAS,qBAAX,EAArB,CAAP;AACD;AACF;AACF;;AAED;;;;;;;;;AASA,SAAOC,QAAP,CAAgBxB,GAAhB,EAAqBC,GAArB,EAA0B;AACxBA,QAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBS,cAAQjB,IAAIiB;AADO,KAArB;AAGD;AACD;;;;;;;;;AASA,SAAOQ,SAAP,CAAiBzB,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,UAAMU,UAAUe,SAAS1B,IAAI2B,MAAJ,CAAWhB,OAApB,EAA6B,EAA7B,CAAhB;AACA,UAAMiB,gBAAgB5B,IAAIiB,MAAJ,CAAWC,MAAX,CAAkBW,QAAQA,KAAKlB,OAAL,KAAiBA,OAA3C,EAAoD,CAApD,CAAtB;;AAEA,QAAI,CAACiB,aAAL,EAAoB;AAChB3B,UAAI6B,UAAJ,CAAe,GAAf;AACH,KAFD,MAEO;AACLF,oBAAcd,QAAd,GAAyBd,IAAIY,IAAJ,CAASE,QAAlC;AACAc,oBAAcb,KAAd,GAAsBf,IAAIY,IAAJ,CAASG,KAA/B;AACAd,UAAI6B,UAAJ,CAAe,GAAf;AACD;AACF;AA1EmB;;kBA6EPhC,e","file":"OrderController.js","sourcesContent":["\n/** @class OrderController\n *\n */\nclass OrderController {\n  /**\n   * Create a new order\n   *\n   * @static\n   * @param {Object} req - request object\n   * @param {Object} res - response object\n   * @returns {Object} res\n   *\n   */\n  static createOrder(req, res) {\n    req.checkBody('orderId', 'Order id is required').notEmpty().trim();\n    req.checkBody('customerId', 'Customer Id is required').notEmpty().trim();\n    req.checkBody('mealName', 'Name of meal is required').notEmpty().trim();\n    req.checkBody('total', 'Order total is required').notEmpty().trim();\n\n    const requestErrors = req.validationErrors();\n\n    if (requestErrors) {\n      res.status(400).json({\n        errors: requestErrors,\n      });\n    } else {\n      const order = {\n        orderId: req.body.orderId,\n        customerId: req.body.customerId,\n        mealName: req.body.mealName,\n        total: req.body.total,\n      };\n      const filterOrder = req.orders.filter(check =>\n        check.orderId === req.body.orderId && check.customerId === req.body.customerId);\n      if (filterOrder.length === 0) {\n        req.orders.push(order);\n        res.status(201).json({ order });\n      } else {\n        return res.status(400).send({ message: 'Order already exist' });\n      }\n    }\n  }\n\n  /**\n   * get order\n   *\n   * @static\n   * @param {Object} req - request object\n   * @param {Object} res - response object\n   * @returns {Object} res\n   *\n   */\n  static getOrder(req, res) {\n    res.status(200).json({\n      orders: req.orders,\n    });\n  }\n  /**\n   * Edit current order\n   *\n   * @static\n   * @param {Object} req - request object\n   * @param {Object} res - response object\n   * @returns {Object} res\n   *\n   */\n  static editOrder(req, res) {\n    const orderId = parseInt(req.params.orderId, 10);\n    const existingOrder = req.orders.filter(edit => edit.orderId === orderId)[0];\n\n    if (!existingOrder) {\n        res.sendStatus(404);\n    } else {\n      existingOrder.mealName = req.body.mealName;\n      existingOrder.total = req.body.total;\n      res.sendStatus(204);\n    }\n  }\n}\n\nexport default OrderController;\n"]}