{"version":3,"sources":["../../../server/tests/controllers/menuController.test.js"],"names":["describe","it","done","get","set","expect","res","body","toBeTruthy","end","err","post","send","invalid4","invalid1","invalid2","invalid3","valid","toEqual"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,mBAAT,EAA8B,MAAM;AAClCC,KAAG,sBAAH,EAA4BC,IAAD,IAAU;AACnC,4CACGC,GADH,CACO,eADP,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,MAHH,CAGU,GAHV,EAIGA,MAJH,CAIWC,GAAD,IAAS;AACf,4BAAOA,IAAIC,IAAX,EAAiBC,UAAjB;AACD,KANH,EAOGC,GAPH,CAOQC,GAAD,IAAS;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOR,KAAKQ,GAAL,CAAP;AACD;AACDR;AACD,KAZH;AAaD,GAdD;AAeD,CAhBD;;AAkBAF,SAAS,oBAAT,EAA+B,MAAM;AACnCC,KAAG,+CAAH,EAAqDC,IAAD,IAAU;AAC5D,4CACGS,IADH,CACQ,eADR,EAEGP,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGQ,IAHH,CAGQ,EAAEC,yBAAF,EAHR,EAIGR,MAJH,CAIU,GAJV,EAKGI,GALH,CAKQC,GAAD,IAAS;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOR,KAAKQ,GAAL,CAAP;AACD;AACF,KATH;AAUAR;AACD,GAZD;AAaAD,KAAG,uCAAH,EAA6CC,IAAD,IAAU;AACpD,4CACGS,IADH,CACQ,eADR,EAEGP,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGQ,IAHH,CAGQ,EAAEE,yBAAF,EAHR,EAIGT,MAJH,CAIU,GAJV,EAKGI,GALH,CAKQC,GAAD,IAAS;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOR,KAAKQ,GAAL,CAAP;AACD;AACF,KATH;AAUAR;AACD,GAZD;AAaAD,KAAG,0CAAH,EAAgDC,IAAD,IAAU;AACvD,4CACGS,IADH,CACQ,eADR,EAEGP,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGQ,IAHH,CAGQ,EAAEG,yBAAF,EAHR,EAIGV,MAJH,CAIU,GAJV,EAKGI,GALH,CAKQC,GAAD,IAAS;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOR,KAAKQ,GAAL,CAAP;AACD;AACF,KATH;AAUAR;AACD,GAZD;AAaAD,KAAG,qCAAH,EAA2CC,IAAD,IAAU;AAClD,4CACGS,IADH,CACQ,eADR,EAEGP,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGQ,IAHH,CAGQ,EAAEI,yBAAF,EAHR,EAIGX,MAJH,CAIU,GAJV,EAKGI,GALH,CAKQC,GAAD,IAAS;AACZ,UAAIA,GAAJ,EAAS;AACP,eAAOR,KAAKQ,GAAL,CAAP;AACD;AACF,KATH;AAUAR;AACD,GAZD;AAaAD,KAAG,wBAAH,EAA8BC,IAAD,IAAU;AACrC,4CACGS,IADH,CACQ,eADR,EAEGP,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGQ,IAHH,CAGQ,EAAEK,mBAAF,EAHR,EAIGZ,MAJH,CAIU,GAJV,EAKGA,MALH,CAKWC,GAAD,IAAS;AACf,4BAAOA,IAAIC,IAAX,EAAiBW,OAAjB;AACD,KAPH;AAQAhB;AACD,GAVD;AAWD,CAhED","file":"menuController.test.js","sourcesContent":["import expect from 'expect';\nimport request from 'supertest';\nimport app from '../../app';\nimport { valid, invalid1, invalid2, invalid3, invalid4 } from '../seedData/menus';\n\ndescribe('GET /api/v1/menus', () => {\n  it('should get all menus', (done) => {\n    request(app)\n      .get('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .expect(200)\n      .expect((res) => {\n        expect(res.body).toBeTruthy();\n      })\n      .end((err) => {\n        if (err) {\n          return done(err);\n        }\n        done();\n      });\n  });\n});\n\ndescribe('POST /api/v1/menus', () => {\n  it('should not post a menu with invalid menu name', (done) => {\n    request(app)\n      .post('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .send({ invalid4 })\n      .expect(400)\n      .end((err) => {\n        if (err) {\n          return done(err);\n        }\n      });\n    done();\n  });\n  it('should not post a menu without a date', (done) => {\n    request(app)\n      .post('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .send({ invalid1 })\n      .expect(400)\n      .end((err) => {\n        if (err) {\n          return done(err);\n        }\n      });\n    done();\n  });\n  it('should not post a menu without menu name', (done) => {\n    request(app)\n      .post('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .send({ invalid2 })\n      .expect(400)\n      .end((err) => {\n        if (err) {\n          return done(err);\n        }\n      });\n    done();\n  });\n  it('should not post a menu without meal', (done) => {\n    request(app)\n      .post('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .send({ invalid3 })\n      .expect(400)\n      .end((err) => {\n        if (err) {\n          return done(err);\n        }\n      });\n    done();\n  });\n  it('should post a new menu', (done) => {\n    request(app)\n      .post('/api/v1/menus')\n      .set('Accept', 'application/json')\n      .send({ valid })\n      .expect(205)\n      .expect((res) => {\n        expect(res.body).toEqual(valid);\n      });\n    done();\n  });\n});\n"]}